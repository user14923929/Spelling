{"entries":[{"timestamp":1741958860202,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":75},{"diffs":[[0,"ver\""],[-1," x=\"0\" y=\"0\""],[0,"></b"]],"start1":107,"start2":107,"length1":20,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"custom.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":223,"start2":223,"length1":66,"length2":44}]},{"type":"added","filename":"custom.ts","value":"enum Letters {\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z\n}\n\n//% weight=100 color=#0fbc11\n\nnamespace SpellingBee {\n    //? block=\"$letter\"\n    export function SpellLetter(letter: Letters) {\n        return letter || \"\"\n    }\n}"}]},{"timestamp":1741959395903,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"0\"><"],[-1,"statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">Hello!</field></shadow><block type=\"spelling_SpellLetter\"><field name=\"letter\">Letters.A</field></block></value></block></statement><"],[0,"/blo"]],"start1":116,"start2":116,"length1":259,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"    basic.showString(spelling.SpellLetter(Letters.A))"],[1,"\t"],[0,"\n})\n"]],"start1":24,"start2":24,"length1":61,"length2":9}]},{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0,"#0fbc11\n"],[1,"\n"],[0,"namespac"]],"start1":220,"start2":220,"length1":16,"length2":17},{"diffs":[[0,"ace "],[-1,"s"],[1,"S"],[0,"pelling"],[-1," {\n    \n    /**\n     * Return letter\n     */"],[1,"Bee {"],[0,"\n    //"],[-1,"%"],[1,"?"],[0," blo"]],"start1":235,"start2":235,"length1":68,"length2":29},{"diffs":[[0,"ers)"],[-1,": string"],[0," {\n "]],"start1":321,"start2":321,"length1":16,"length2":8},{"diffs":[[0,"    "],[-1,"const letterMap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; // String indexing trick\n        return letterMap.charAt(letter); // Convert numeric enum to letter\n    }\n\n    /**\n     * Spell the word\n     */\n    //% block"],[1,"return letter || \"\"\n    }"],[0,"\n}"]],"start1":332,"start2":332,"length1":212,"length2":31}]}]},{"timestamp":1741959995615,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":272,"start2":272,"length1":21,"length2":17}]},{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"enum scrollString {\n    Scrolling,\n    Nothing\n}\n\n"],[0,"//% "]],"start1":195,"start2":195,"length1":58,"length2":8},{"diffs":[[0," }\n\n"],[-1,"    enum scrollString {\n        Scrolling,\n        NoScrolling\n    }\n\n"],[0,"    "]],"start1":533,"start2":533,"length1":78,"length2":8},{"diffs":[[0,"word"],[-1," (string)"],[0,"\n   "]],"start1":562,"start2":562,"length1":17,"length2":8},{"diffs":[[0,"lock"],[-1,"=\"spell $str with $scroll\"\n    export function spellString(str: string, scroll: scrollString) {\n        if (str.length === 0) {\n            // Nothing\n            return;\n        } else {\n            if (scroll === scrollString.Scrolling) {\n                basic.showString(str); // Displays the string on micro:bit\n            } else {\n                basic.showLeds(`\n                . # . # .\n                # . # . #\n                . # . # .\n                # . # . #\n                . # . # .\n            `); // Example: Display an LED pattern if not scrolling\n            }\n        }\n    }\n"],[0,"\n}"]],"start1":584,"start2":584,"length1":604,"length2":6}]}]},{"timestamp":1741960594313,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"pe=\""],[-1,"pxt-on-start"],[1,"device_forever"],[0,"\" x="]],"start1":87,"start2":87,"length1":20,"length2":22},{"diffs":[[0,"pe=\""],[-1,"spelling_spellString\"><field name=\"scroll\">scrollString.scrolling</field"],[1,"device_print_message\""],[0,"><va"]],"start1":154,"start2":154,"length1":80,"length2":29},{"diffs":[[0,"me=\""],[-1,"str"],[1,"text"],[0,"\"><s"]],"start1":189,"start2":189,"length1":11,"length2":12},{"diffs":[[0,"ello"],[-1," world"],[1,"!</field></shadow><block type=\"spelling_SpellLetter\"><field name=\"letter\">Letters.A"],[0,"</fi"]],"start1":239,"start2":239,"length1":14,"length2":91},{"diffs":[[0,"field></"],[-1,"shadow"],[1,"block"],[0,"></value"]],"start1":328,"start2":328,"length1":22,"length2":21}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"spelling.spellString(\"Hello world\", scrollString.scrolling"],[1,"basic.forever(function () {\n    basic.showString(spelling.SpellLetter(Letters.A))\n}"],[0,")\n"]],"start1":0,"start2":0,"length1":60,"length2":85}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":272,"start2":272,"length1":17,"length2":21}]},{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0,"Y,\n    Z"],[-1,","],[0,"\n}\n\nenum"]],"start1":187,"start2":187,"length1":17,"length2":16},{"diffs":[[0,"g {\n    "],[-1,"s"],[1,"S"],[0,"crolling"]],"start1":215,"start2":215,"length1":17,"length2":17},{"diffs":[[0,"ng,\n    "],[-1,"n"],[1,"N"],[0,"othing\n}"]],"start1":230,"start2":230,"length1":17,"length2":17},{"diffs":[[0,"or=#"],[-1,"f9c901 icon=\"\""],[1,"0fbc11"],[0,"\nnam"]],"start1":267,"start2":267,"length1":22,"length2":14},{"diffs":[[0,"lling {\n"],[1,"    "],[0,"\n    /**"]],"start1":291,"start2":291,"length1":16,"length2":20},{"diffs":[[0,"tter\n    }\n\n"],[1,"    enum scrollString {\n        Scrolling,\n        NoScrolling\n    }\n\n"],[0,"    /**\n    "]],"start1":575,"start2":575,"length1":24,"length2":94},{"diffs":[[0,"roll"],[-1," effect"],[0,"\"\n  "]],"start1":738,"start2":738,"length1":15,"length2":8},{"diffs":[[0,"    "],[-1,"return; // Do nothing if the string is empty\n        }\n\n"],[1,"// Nothing\n            return;\n        } else {\n    "],[0,"    "]],"start1":853,"start2":853,"length1":64,"length2":60},{"diffs":[[0,"lString."],[-1,"s"],[1,"S"],[0,"crolling"]],"start1":937,"start2":937,"length1":17,"length2":17},{"diffs":[[0,") {\n            "],[1,"  "],[1,"  "],[0,"basic.showString"]],"start1":954,"start2":954,"length1":32,"length2":36},{"diffs":[[0,"play"],[-1," entir"],[1,"s th"],[0,"e st"]],"start1":1003,"start2":1003,"length1":14,"length2":12},{"diffs":[[0," string "],[-1,"scrolling\n"],[1,"on micro:bit\n    "],[0,"        "]],"start1":1012,"start2":1012,"length1":26,"length2":33},{"diffs":[[0,"    "],[-1,"// Show one letter at a time without scrolling\n            for (let value of str) {\n                basic.showString(value);"],[1,"    basic.showLeds(`\n                . # . # .\n                # . # . #\n                . # . # .\n                # . # . #\n                . # . # .\n            `); // Example: Display an LED pattern if not scrolling"],[0,"\n   "]],"start1":1062,"start2":1062,"length1":132,"length2":226},{"diffs":[[0,"}\n    }\n"],[-1,"}"],[0,"\n"],[1,"}"]],"start1":1307,"start2":1307,"length1":10,"length2":10}]}]},{"timestamp":1741961293299,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0,"=#f9c901"],[1," icon=\"\""],[0,"\nnamespa"]],"start1":270,"start2":270,"length1":16,"length2":24}]}]},{"timestamp":1741961317291,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"enum Letters {\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z,\n}\n\nenum scrollString {\n    scrolling,\n    nothing\n}\n\n//% weight=100 color=#f9c901\nnamespace spelling {\n\n    /**\n     * Return letter\n     */\n    //% block=\"$letter\"\n    export function SpellLetter(letter: Letters): string {\n        const letterMap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; // String indexing trick\n        return letterMap.charAt(letter); // Convert numeric enum to letter\n    }\n\n    /**\n     * Spell the word (string)\n     */\n    //% block=\"spell $str with $scroll effect\"\n    export function spellString(str: string, scroll: scrollString) {\n        if (str.length === 0) {\n            return; // Do nothing if the string is empty\n        }\n\n        if (scroll === scrollString.scrolling) {\n            basic.showString(str); // Display entire string scrolling\n        } else {\n            // Show one letter at a time without scrolling\n            for (let value of str) {\n                basic.showString(value);\n            }\n        }\n    }\n}"],[1,"spelling.spellString(\"Hello world\", scrollString.scrolling)"],[0,"\n"]],"start1":0,"start2":0,"length1":1152,"length2":60}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": \""],[-1,"Spelling"],[1,"Без названия"],[0,"\",\n "]],"start1":11,"start2":11,"length1":16,"length2":20},{"diffs":[[0,"\": \"*\",\n"],[1,"        \"radio\": \"*\",\n"],[0,"        "]],"start1":88,"start2":88,"length1":16,"length2":38},{"diffs":[[0,"  \"main."],[-1,"t"],[1,"block"],[0,"s\",\n    "]],"start1":172,"start2":172,"length1":17,"length2":21},{"diffs":[[0,"   \""],[-1,"README.md\""],[1,"main.ts\","],[0,"\n    "],[-1,"],\n"],[0,"    \""],[-1,"testFiles\": ["],[1,"README.md\","],[0,"\n   "]],"start1":194,"start2":194,"length1":44,"length2":38},{"diffs":[[0,"   \""],[-1,"test"],[1,"custom"],[0,".ts\""]],"start1":234,"start2":234,"length1":12,"length2":14}]},{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[1,"s"],[0,"://"],[-1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"spelling_spellString\"><field name=\"scroll\">scrollString.scrolling</field><value name=\"str\"><shadow type=\"text\"><field name=\"TEXT\">Hello world</field></shadow></value></block></statement></block>"],[0,"</xm"]],"start1":12,"start2":12,"length1":113,"length2":342}]},{"type":"removed","filename":"custom.ts","value":"enum Letters {\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z,\n}\n\nenum scrollString {\n    scrolling,\n    nothing\n}\n\n//% weight=100 color=#f9c901\nnamespace spelling {\n\n    /**\n     * Return letter\n     */\n    //% block=\"$letter\"\n    export function SpellLetter(letter: Letters): string {\n        const letterMap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; // String indexing trick\n        return letterMap.charAt(letter); // Convert numeric enum to letter\n    }\n\n    /**\n     * Spell the word (string)\n     */\n    //% block=\"spell $str with $scroll effect\"\n    export function spellString(str: string, scroll: scrollString) {\n        if (str.length === 0) {\n            return; // Do nothing if the string is empty\n        }\n\n        if (scroll === scrollString.scrolling) {\n            basic.showString(str); // Display entire string scrolling\n        } else {\n            // Show one letter at a time without scrolling\n            for (let value of str) {\n                basic.showString(value);\n            }\n        }\n    }\n}\n"},{"type":"added","filename":"test.ts","value":"//spelling.spellString(\"Hello, world!\", scrollString.scrolling)"}]}],"snapshots":[{"timestamp":1741958860201,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Без названия\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1741960664288,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U$1./tSPrCp?^K^9}5)B\">value</variable><variable id=\"bvVljQGmg7,Fxe*ht`e$\">list</variable></variables><block type=\"device_forever\" x=\"35\" y=\"53\"><statement name=\"HANDLER\"><block type=\"pxt_controls_for_of\"><value name=\"VAR\"><block type=\"variables_get_reporter\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VAR\" id=\"U$1./tSPrCp?^K^9}5)B\">value</field></block></value><value name=\"LIST\"><block type=\"text\"><field name=\"TEXT\">Hello</field></block></value><statement name=\"DO\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">Hello!</field></shadow><block type=\"variables_get_reporter\"><field name=\"VAR\" id=\"U$1./tSPrCp?^K^9}5)B\">value</field></block></value></block></statement></block></statement></block></xml>","main.ts":"basic.forever(function () {\n    for (let value of \"Hello\") {\n        basic.showString(\"\" + (value))\n    }\n})\n","README.md":"","custom.ts":"enum Letters {\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z,\n}\n\nenum scrollString {\n    Scrolling,\n    Nothing\n}\n\n//% weight=100 color=#0fbc11\nnamespace spelling {\n    \n    /**\n     * Return letter\n     */\n    //% block=\"$letter\"\n    export function SpellLetter(letter: Letters): string {\n        const letterMap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; // String indexing trick\n        return letterMap.charAt(letter); // Convert numeric enum to letter\n    }\n\n    enum scrollString {\n        Scrolling,\n        NoScrolling\n    }\n\n    /**\n     * Spell the word (string)\n     */\n    //% block=\"spell $str with $scroll\"\n    export function spellString(str: string, scroll: scrollString) {\n        if (str.length === 0) {\n            // Nothing\n            return;\n        } else {\n            if (scroll === scrollString.Scrolling) {\n                basic.showString(str); // Displays the string on micro:bit\n            } else {\n                basic.showLeds(`\n                . # . # .\n                # . # . #\n                . # . # .\n                # . # . #\n                . # . # .\n            `); // Example: Display an LED pattern if not scrolling\n            }\n        }\n    }\n\n}","pxt.json":"{\n    \"name\": \"Без названия\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1741961506469}